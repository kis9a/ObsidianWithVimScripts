*vimsidian.txt* Help edit obsidian notes in Vim

*vimsidian*

AUTHOR: *kis9a* <kis9ax@gmail.com>
REPOSITORY: https://github.com/kis9a/vimsidian
LICENSE: WTFPL


==============================================================================
CONTENTS                                                 *vimsidian-contents*

  INTRODUCTION ........... |vimsidian-introduction|
  REQUIREMENTS ........... |vimsidian-requirements|
  VARIABLES .............. |vimsidian-variables|
  OPTIONS ................ |vimsidian-options|
  COMMANDS ............... |vimsidian-commands|
  EXAMPLES ............... |vimsidian-examples|


==============================================================================
INTRODUCTION                                         *vimsidian-introduction*

Vim plugin to help edit obsidian notes in Vim. Links, backlink resolution
and jumps, search and completion and highlighting

Even if you don't use obsidian, you can use it to manage your notes locally.
This plugin was made for me, but I hope it will be useful for those who
want to easily edit obsidian notes with vim as I do.

If you have trouble using it, please post an issues.
Contributions, edits and distribution are also welcome.


==============================================================================
REQUIREMENTS                                         *vimsidian-requirements*

------------------------------------------------------------------------------
                                              *vimsidian_required_commands*
Required commands:
  fd : https://github.com/sharkdp/fd
  ripgrep : https://github.com/BurntSushi/ripgrep


==============================================================================
VARIABLES                                               *vimsidian-variables*

All variable:
  |$VIMSIDIAN_PATH_PATTERN|
  |$VIMSIDIAN_TEST_PATH|

------------------------------------------------------------------------------
                                                   *vimsidian_path_pattern*
  |$VIMSIDIAN_PATH_PATTERN|

  let $VIMSIDIAN_PATH_PATTERN = |g:vimsidian_path| . "/*.md"

The |$VIMSIDIAN_PATH_PATTERN| is the autocmd path-pattern (:h autocmd-pattern)

------------------------------------------------------------------------------
                                                     *vimsidian_test_path*
  |$VIMSIDIAN_TEST_PATH|

|$VIMSIDIAN_TEST_PATH| is used to initialize |g:vimsidian_path| at test run time

==============================================================================
OPTIONS                                                   *vimsidian-options*

All options:
  |g:vimsidian_path|
  |g:loaded_vimsidian_plugin|
  |g:vimsidian_log_level|
  |g:vimsidian_enable_syntax_highlight|
  |g:vimsidian_enable_complete_functions|
  |g:vimsidian_complete_paths_search_use_fd|
  g:vimsidian_enable_link_stack
  |g:max_number_of_links_to_check_for_broken|
  |g:vimsidian_link_open_mode|
  |g:vimsidian_color_definition_use_default|
  |g:vimsidian_check_required_commands_executable|
  |g:vimsidian_complete_paths|
  |g:vimsidian_required_commands|
  |g:vimsidian_unsuitable_link_chars|
  |g:vimsidian_internal_link_chars|
  |g:vimsidian_media_extensions|

------------------------------------------------------------------------------
                                                        *g:vimsidian_path*

  let g:vimsidian_path = 0

g:vimsidian_path variable is the path where notes and completion suggestions
are searched

------------------------------------------------------------------------------
                                                *g:loaded_vimsidian_plugin*

  let g:loaded_vimsidian_plugin = 0

A variable that indicates if the plugin is already loaded.
You can disable vimsidian by setting value 1

------------------------------------------------------------------------------
                                                    *g:vimsidian_log_level*

  let g:vimsidian_log_level = 2

0: NONE, 1:ERROR, 2:INFO, 3:DEBUG

------------------------------------------------------------------------------
                                     *g:vimsidian_enable_syntax_highlight*

  let g:vimsidian_enable_syntax_highlight = 1

Variable to control whether syntax highlighting is enabled or disabled,
enabled by default

------------------------------------------------------------------------------
                                    *g:vimsidian_enable_complete_functions*

  let g:vimsidian_enable_complete_functions = 1

Variable that controls enable/disable of note input completion function,
enabled by default

------------------------------------------------------------------------------
                                 *g:vimsidian_complete_paths_search_use_fd*

  let g:vimsidian_complete_paths_search_use_fd = 1

Whether to search files under g:vimsidian_complete_paths using fd,
use ls when 0

------------------------------------------------------------------------------
                                             *g:vimsidian_enable_link_stack*

  let g:vimsidian_enable_link_stack = 1

Keep a stack of link jump history in each window (w:w:vimsidian_link_stack)
Provides jump and jumpback functionality to entries in the link stack.
Enabled by default

------------------------------------------------------------------------------
                                                       *g:vimsidian_use_fzf*

  let g:vimsidian_use_fzf = 0

Open listings using fzf instead of quick fix window, 
if used, install the fzf plugin and set it to 1.
https://github.com/junegunn/fzf.vim

------------------------------------------------------------------------------
                                              *g:vimsidian_link_open_mode*

  let g:vimsidian_link_open_mode = 'e!'

Change the way the buffer opens when opening a new note

------------------------------------------------------------------------------
                                *g:max_number_of_links_to_check_for_broken*

  let g:max_number_of_links_to_check_for_broken = 80

Maximum number of links to check for broken. Set limits for performance.

------------------------------------------------------------------------------
                                *g:vimsidian_color_definition_use_default*

  let g:vimsidian_color_definition_use_default = 1

A variable that specifies whether to use the default color definition

------------------------------------------------------------------------------
                          *g:vimsidian_check_required_commands_executable*

  let g:vimsidian_check_required_commands_executable = 1

A variable to check if the necessary command can be executed when loading the
plugin

------------------------------------------------------------------------------
                                              *g:vimsidian_complete_paths*

  let g:vimsidian_complete_paths = []

A list of directories containing notes that complete the input

------------------------------------------------------------------------------
                                           *g:vimsidian_required_commands*

  let g:vimsidian_required_commands = ['rg', 'fd', 'grep']

List of commands required to use vimsidian

------------------------------------------------------------------------------
                                       *g:vimsidian_unsuitable_link_chars*

  let g:vimsidian_unsuitable_link_chars = ['^', '\|', '#', '[', ']']

List of characters unsuitable for use in link names

------------------------------------------------------------------------------
                                           *g:vimsidian_internal_link_chars*

  let g:vimsidian_internal_link_chars = ['^', '\|', '#']

List of characters used for internal links

------------------------------------------------------------------------------
                                              *g:vimsidian_media_extensions*

  let g:vimsidian_media_extensions = ["png", "svg", "gif", ...]

A list of extensions
(https://help.obsidian.md/Obsidian+Publish/Hosting+media+files) to recognize
as media when interpreting the link under the cursor.


==============================================================================
COMMANDS                                                 *vimsidian-commands*

All commands:
  |:VimsidianRgNotesWithMatches|
  |:VimsidianRgLinesWithMatches|
  |:VimsidianRgNotesWithMatchesInteractive|
  |:VimsidianRgLinesWithMatchesInteractive|
  |:VimsidianFdLinkedNotesByThisNote|
  |:VimsidianRgNotesLinkingThisNote|
  |:VimsidianRgTagMatches|
  |:VimsidianMoveToLink|
  |:VimsidianMoveToPreviousLink|
  |:VimsidianMoveToNextLink|
  |:VimsidianLinkStack|
  |:VimsidianMoveToNextEntryInLinkStack|
  |:VimsidianMoveToPreviousEntryInLinkStack|
  |:VimsidianNewNote|
  |:VimsidianNewNoteInterfactive|
  |:VimsidianMatchCursorLink|
  |:VimsidianMatchBrokenLinks|
  |:VimsidianFormatLink|

------------------------------------------------------------------------------
                                      *vimsidian_cmd_rg_notes_with_matches*
  |:VimsidianRgNotesWithMatches|

Search |g:vimsidian_path| for a list of notes containing the argument keyword
and display it in the quickfix list

------------------------------------------------------------------------------
                                      *vimsidian_cmd_rg_lineswith_matches*
  |:VimsidianRgLinesWithMatches|

Search |g:vimsidian_path| for a list of lines containing the argument keyword
and display it in the quickfix list

------------------------------------------------------------------------------
                             *vimsidian_rg_notes_with_matches_interactive*

  |:VimsidianRgNotesWithMatchesInteractive| `[keyword]`

Enter the `keyword` for the arguments of the |:VimsidianRgNotesWithMatches|
command at the prompt

------------------------------------------------------------------------------
                             *vimsidian_rg_lines_with_matches_interactive*

  |:VimsidianRgLinesWithMatchesInteractive| `[keyword]`

Enter the `keyword` for the arguments of the |:VimsidianRgLinesWithMatches|
command at the prompt

------------------------------------------------------------------------------
                                  *vimsidian_fd_linked_notes_by_this_note*

  |:VimsidianFdLinkedNotesByThisNote|

Search |g:vimsidian_path| for list of notes linked to by this note
and display it in the quickfix list

------------------------------------------------------------------------------
                                    *vimsidian_rg_notes_linking_this_note*

  |:VimsidianRgNotesLinkingThisNote|

Search |g:vimsidian_path| for list of notes linking this note
and display it in the quickfix list

------------------------------------------------------------------------------
                                                *vimsidian_rg_tag_matches*

  |:VimsidianRgTagMatches|

Search |g:vimsidian_path| for list of matches containing the under cursor
tag name and display it in the quickfix list


------------------------------------------------------------------------------
                                                  *vimsidian_move_to_link*

  |:VimsidianMoveToLink|

Search |g:vimsidian_path| for the link you are cursor on and move it.

------------------------------------------------------------------------------
                                          *vimsidian_move_to_previous_link*

  |:VimsidianMoveToPreviousLink|

Go to link before current cursor

------------------------------------------------------------------------------
                                              *vimsidian_move_to_next_link*

  |:VimsidianMoveToNextLink|

Go to link before current cursor

------------------------------------------------------------------------------
                                                     *vimsidian_link_stack*

  |:VimsidianLinkStack|

Show the contents of the link stack and the current position

------------------------------------------------------------------------------
                                *vimsidian_move_to_next_entry_in_link_stack*

  |:VimsidianMoveToNextEntryInLinkStack|

Move to next entry in link stack

------------------------------------------------------------------------------
                                *vimsidian_move_to_previous_entry_in_link_stack*

  |:VimsidianMoveToPreviousEntryInLinkStack|

Move to previous entry in link stack

------------------------------------------------------------------------------
                                                         *vimsidian_new_note*

  |:VimsidianNewNote| `[directory]`

Creates a note with the name of the link under the cursor in a `directory`
with the name of the argument

------------------------------------------------------------------------------
                                           *vimsidian_new_note_interfactive*

  |:VimsidianNewNoteInterfactive| `[directory]`

Creates a new note at the location entered by the user

------------------------------------------------------------------------------
                                              *vimsidian_match_cursor_link*

  |:VimsidianMatchCursorLink|

Highlight the note under the cursor, or darken the note if it does not exist.

------------------------------------------------------------------------------
                                              *vimsidian_match_broken_links*

  |:VimsidianMatchBrokenLinks|

Darkens broken links in the note. 
Adjust |g:max_number_of_links_to_check_for_broken|.

------------------------------------------------------------------------------
                                                    *vimsidian_format_link*

  |:VimsidianFormatLink|

Format vimsidian link string for the current file


==============================================================================
EXAMPLES                                                *vimsidian-examples*

------------------------------------------------------------------------------
                                    *vimsidian_minimal_configuration_example*

  let g:vimsidian_path = $HOME . '/obsidian'
  let g:vimsidian_enable_syntax_highlight = 1
  let g:vimsidian_enable_complete_functions = 1
  let g:vimsidian_complete_paths = [g:vimsidian_path . '/notes']
  let $VIMSIDIAN_PATH_PATTERN = g:vimsidian_path . '/*.md'
  
  function! s:vimsidianNewNoteAtNotesDirectory()
    execute ':VimsidianNewNote ' . g:vimsidian_path . '/notes'
  endfunction
  
  augroup vimsidian_augroup
    au!
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sl :VimsidianFdLinkedNotesByThisNote<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sg :VimsidianRgNotesLinkingThisNote<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> st :VimsidianRgTagMatches<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sm :VimsidianRgNotesWithMatchesInteractive<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> si :VimsidianRgLinesWithMatchesInteractive<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sF :VimsidianMoveToLink<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> <2-LeftMouse> :VimsidianMoveToLink<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sk :VimsidianMoveToPreviousLink<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sj :VimsidianMoveToNextLink<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sN :call <SID>vimsidianNewNoteAtNotesDirectory()<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sO :VimsidianNewNoteInteractive<CR>
    au BufNewFile,BufReadPost $VIMSIDIAN_PATH_PATTERN /,
      nn <buffer> sf :VimsidianFormatLink<CR>
    au WinEnter,BufEnter $VIMSIDIAN_PATH_PATTERN /,
      silent! call vimsidian#MatchBrokenLinks()
    au CursorMoved $VIMSIDIAN_PATH_PATTERN /,
      silent! call vimsidian#MatchCursorLink()
  augroup END

==============================================================================
vim: tw=78:ft=help
